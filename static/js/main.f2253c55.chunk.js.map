{"version":3,"sources":["Components/Apartment/index.tsx","utils.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Apartment","number","dateString","address","image_url","url","created_at","deposit","size","rent","rooms","className","src","alt","href","target","rel","Date","toLocaleString","year","month","day","Intl","NumberFormat","style","currency","format","useEffect","React","useState","App","apartments","setApartments","a","fetch","resp","json","apartmentData","console","log","loadData","map","apartment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAIaA,EAAa,SAAC,GAAmF,ICE/EC,EANJC,EDICC,EAAiF,EAAjFA,QAASC,EAAwE,EAAxEA,UAAWC,EAA6D,EAA7DA,IAAKC,EAAwD,EAAxDA,WAAYC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,MAGlF,OACA,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKC,IAAKR,EAAWS,IAAKV,MAE9B,sBAAKQ,UAAU,eAAf,UACI,mBAAGG,KAAMT,EAAKU,OAAO,SAASC,IAAI,aAAlC,SAAgDb,IAChD,+BACI,+BAAI,sDAAJ,IAAiC,gCCftBD,EDewCI,ECZxD,IAAIW,KAAKf,GAAYgB,eAAe,QAFC,CAAEC,KAAM,UAAWC,MAAO,UAAWC,IAAK,kBDe1E,+BAAI,iDAAJ,IAA+B,gCCVhBpB,EDUsCM,ECT/C,IAAIe,KAAKC,aAAa,QAAS,CAC7CC,MAAO,WACPC,SAAU,QAGKC,OAAOzB,eDOtB,sBAAKU,UAAU,eAAf,UACI,+BACI,2CACA,+BAAKH,EAAL,cAEJ,+BACI,uCACA,yCAAOC,QAEX,+BACI,wCACA,6BAAKC,cEzBbiB,EAAwBC,IAAxBD,UAAWE,EAAaD,IAAbC,SAmCJC,MAjCf,WAAgB,IAAD,EACuBD,EAAuB,IAD9C,mBACNE,EADM,KACMC,EADN,KAeb,OAZAL,GAAU,WAAM,4CACd,8BAAAM,EAAA,sEACqBC,MAAM,gBAD3B,cACQC,EADR,gBAE8BA,EAAKC,OAFnC,OAEQC,EAFR,OAGEC,QAAQC,IAAIF,GAEZL,EAAcK,GALhB,4CADc,uBAAC,WAAD,wBASdG,KACC,IAGD,sBAAK7B,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACF,qBAAKA,UAAU,UAAf,SACI,+BACE,0CADF,mCAKJ,qBAAKA,UAAU,sBAAf,SACGoB,EAAWU,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,eAAeA,aCrBVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f2253c55.chunk.js","sourcesContent":["import React from \"react\"\nimport { IApartment } from '../../Interfaces'\nimport { formatDate, formatCurrency } from \"../../utils\"\n\nexport const Apartment =  ({address, image_url, url, created_at, deposit, size, rent, rooms}: IApartment) => {\n    \n    \n    return (\n    <div className=\"apartment\">\n        <div className=\"image-container\">\n            <img src={image_url} alt={address} />\n        </div>\n        <div className=\"main-content\">\n            <a href={url} target=\"_blank\" rel=\"noreferrer\">{address}</a>\n            <ul>\n                <li><span>Hinzugefügt am:</span> <span>{formatDate(created_at)}</span></li>\n                <li><span>Eigenmittel: </span> <span>{formatCurrency(deposit)}</span></li>\n            </ul>\n        </div>\n        <div className=\"size-content\">\n            <ul>\n                <li>Fläche</li>\n                <li>{size}m²</li>\n            </ul>\n            <ul>\n                <li>Miete</li>\n                <li>€ {rent}</li>\n            </ul>\n            <ul>\n                <li>Zimmer</li>\n                <li>{rooms}</li>\n            </ul>\n        </div>\n    </div>)\n}","export function formatDate(dateString: string) {\n    const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: '2-digit', day: '2-digit' };\n\n    return new Date(dateString).toLocaleString('de-DE', options);\n}\n\nexport function formatCurrency(number: number) {\n    const formatter = new Intl.NumberFormat('de-DE', {\n        style: 'currency',\n        currency: 'EUR',\n      });\n\n      return formatter.format(number);\n}","import \"./App.css\";\nimport { IApartment } from \"./Interfaces\";\nimport React from \"react\";\nimport { Apartment } from \"./Components/Apartment\";\n\nconst { useEffect, useState } = React;\n\nfunction App() {\n  const [apartments, setApartments] = useState<IApartment[]>([]);\n\n  useEffect(() => {\n    async function loadData() {\n      const resp = await fetch(\"../data.json\");\n      const apartmentData = await resp.json();\n      console.log(apartmentData);\n\n      setApartments(apartmentData);\n    }\n\n    loadData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n        <div className=\"header\">\n      <div className=\"wrapper\">\n          <h1>\n            <span>☭</span> die wohnungsgenoss*innen\n          </h1>\n        </div>\n      </div>\n      <div className=\"apartment-container\">\n        {apartments.map((apartment) => (\n          <Apartment {...apartment} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}